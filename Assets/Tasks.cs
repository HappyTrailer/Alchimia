using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Tasks : MonoBehaviour
{

    /////////////////////////////////////////////////////////////////////
    //                         готовка
    //===================================================================
    //1. Обработка ингредиента при переносе его в котел

    /* 
     * При добавление ингредиента в котел запускается таймер обратного отсчета
     *    который при достижении нулевого значения влияет на качество 
     *    зелья.
     * Изначально таймер не отображается и при достижения нуля исчезает(Затухает)
     * Значение таймера сохраняется и суммируется для определения качества зелья
     * Значение RGB ингредиента передается в соответствующие поля готовки
     * Изначальный цвет RGN полей рандомный или заданный конкретно для определённого зелья (обговорить)
     * При достижении крайних значений RGB полей готовки они (обговорить) либо идут в обратном порядке
     *   либо обнуляются.
     * При окончании обработки ингредиент вычеркивается из списка в текущем рецепте следующий становится 
     *  отображен первым.
     */

    //-------------------------------------------------------------------
    //2. Обработка окончания рецепта и создание зелья

    /*
     * Когда заканчиваются все ингредиенты подсчитывается качество зелья (таблицу качества отдельно проработать).
     * В соответствии с качеством идет коэффициент к деньгам за продажу
     * На игровой области всплывает сообщение с изображением зелья с названием и приставкой качестав
     *  по примеру "Хорошее Зелье Мудрости"
     */

    //-------------------------------------------------------------------
    //3. Добавление денег и продажа готового зелья

    /*
     * Создать статическую переменную для хранения суммы денег игрока
     * Продажа осуществляется при окончании готовки
     * сумма продажи вычисляется умножение коэффициентом грейда и цены данного зелья
     */

    //-------------------------------------------------------------------
    /////////////////////////////////////////////////////////////////////
    //                          Исследования
    //===================================================================
    //1. Скрипт и механика работы ступки

    /*
     * При выборе ступки в окне исследования и нажатии на нее открывается инвентарь 
     *  в котором игрок выбирает какой из ингредиентов он хочет исследовать и
     *  количество ингредиентов для помещения в ступку(максимальное количество ограничено
     *  вместимостью ступки и количеством ингредиента в инвентаре)
     * У каждого ингредиента есть показатель процента который показывает шанс успешного
     *  завершения исследования
     * Проценты суммируются по количеству ингредиента в ступке
     * Успешное окончание исследования открывает рецепт с данным ингредиентом.
     * Проверка на наличие данного рецепта осуществляется путем перебора всех доступных
     *  на данный момент ингредиентов и грейда
     * При отсутствии такового выдается что сообщение что с данным ингредиентом нет никаких
     *  рецептов.
     * Если рецепты есть в следующем тире выдается сообщение о том что возможно позже что то будет доступно
     * (обговорить возможность вывода сообщение о наличии рецепта с данным ингредиентом в этом тире но с неоткрытым
     * ингредиентом)
     * (обговорить возможность введения супер удачного исследования с отображением создаваемого ингредиента)
     */

    //-------------------------------------------------------------------
    //2. Скрипт и механика работы дистиллятора

    /*
     * Пока не придумал
     * (возможно использовать для случайной трансмутации одно ингредиента в другой и тогда не дистиллятор 
     * а трансмутатор)
     */
    //-------------------------------------------------------------------
    //3. Смешиватель и смешивание

    /*
     * При выборе смешивателя и нажатии на одну из областей для ингредиента(всего 2)
     *  открывается инвентарь где пользователь выбирает ингредиент для соединения при клике на второй
     *  открывается инвентарь но уже без выбранного ингредиента
     * При наличии ингредиента соответсвующего набору ингредиентов выдается сообщение о успешном 
     *  окончании соединения и открытии в доступных ингредиентах нового
     * Также выдается сообщение о доступных новых зельях
     * При неудачном соеинении выводится соответсвующее сообщение
     */

    //-------------------------------------------------------------------
    //4. Таблица смешивания ингредиентов

    /*
     * Проработать отдельно(и придумать как можно сделать расширяемой)
     */

    //-------------------------------------------------------------------
    //5. Механизм отображения доступных рецептов

    /*
     * Доступные рецепты это те рецепты которые выданы как подсказка при исследовании
     *  в которых отображаэтся ингредиент с которы м есть рецепт а второй обозначен знакм вопроса
     *  в случае супер удачного исследования отображается создаваемый ингредиент 
     *  RGB создаваемого ингредиентов пропорциональны соответсвующим им ингредиентам
     *  из которых они созданы
     */

    //-------------------------------------------------------------------
    //6. Приготовление ингредиентов

    /*
     * В окне приготовления ингредиентов отображаются все доступные рецепты 
     *  открытых ингредиентов и что для их создания необходмо
     * При клике на них открывается диалогове окно с бегунком количества
     * и кнопками создать отмена
     * В бегунке максимальное значение это минималтное количество одного из ингреиентов
     * При нажатии создать количество сообтветсвующих ингредиентов снимается в инвентаре
     */

    //-------------------------------------------------------------------
    /////////////////////////////////////////////////////////////////////
    //                          Магазин
    //===================================================================
    //1. Список продаваемх товаров

    /*
     * Список доступных товаров отображается в окне магазина разбитом на категории
     * При появлении новых товаров у игрока всплывает соответсвующее сообщение
     * Некий стандартный набор ингредиентов у продавца есть всегда
     * Каждое Н-ное количество времени идет обновление товара
     * В обновленном товаре восполняется количество товара у торговца + возможно появление
     * редких товаров (рецептов ингредиентов)
     * Товары которых небыло до этого в лавке имеют приставку(new)
     * Количество основного товара лимитировано но достаточно(количество установить при тесте)
     * Инструменты появляются при открытии соотвествующего грейда
     * Также и товары открываются при достижении грейда 
     * случайные товары открыаются рандомным путем и их количество тоже
     */

    //-------------------------------------------------------------------
    //2. Продажа и покупка

    /*
     * Продажа зелий осущетвляется при изготовлении Ингредиенты можно продать из инвентаря
     * (сумму продажи переработанных ингредиентов обговорить будет ли сумма )
     * Доступные для покупки товары отображены нормально а на те на которые не хватает денег
     * серые и кнопка купить не доступна
     */

    //-------------------------------------------------------------------
    //3. Обновления 

    /*
     * Обновление торговца каждое N-ное количество времени (выяснить при тестировании)
     * При обновлении возобновляется асортимет торговца 
     * Генерируются редкие товары число которых и id-шники которых рандомны
     * (лимитированость денег торговца обговорить)
     * (обсудить возможность супер редких товаров)
     */

    //-------------------------------------------------------------------
    /////////////////////////////////////////////////////////////////////
    //                          Достижения
    //===================================================================
    //1. Список достижений

    /*
     * Предствален классом в котором будут подсчитыватся все что делает игрок
     * Дыннные о подсчете будут хранится в переменных и нкрементироватся свойствами
     *  с соответсвующими названиями
     */

    //-------------------------------------------------------------------
    //2. вывод и отображение прогреса

    /*
     * Все открытые достижения отображаются сверху
     * Выполняемые отображаются в порядке завершонности в прочентах 
     * открытые отображены нормально неоткрытые серые открываемые полу серые)
     */

    //-------------------------------------------------------------------
    //3. Переменные подсчета

    /*
     * На каждое действие своя переменная на каждое достижение свой подсчет
     * Прогрес отображен в процентном соотношении
     */

    //-------------------------------------------------------------------
    /////////////////////////////////////////////////////////////////////
    //                          Сохранение
    //===================================================================
    //1. Сохранение
    //-------------------------------------------------------------------
    //2. Загрузка
    //-------------------------------------------------------------------
    /////////////////////////////////////////////////////////////////////
    //                          Вход
    //===================================================================
    //1. Входное меню
    //-------------------------------------------------------------------
    //2. Иконка 
    //-------------------------------------------------------------------
    /////////////////////////////////////////////////////////////////////
}
